@model FlightBookingViewModel
@{
    ViewData["Title"] = "Test Page";
}

<button type="button" class="btn btn-primary" data-bs-target="#seat-map-modal" ticket-index="0">Open modal for ticket 1</button>
<button type="button" class="btn btn-primary" data-bs-target="#seat-map-modal" ticket-index="1">Open modal for ticket 2</button>
<button type="button" class="btn btn-primary" data-bs-target="#seat-map-modal" ticket-index="2">Open modal for ticket 3</button>

<input type="text" id="Tickets[0].SeatNumber" />
<input type="text" id="Tickets[1].SeatNumber" />
<input type="text" id="Tickets[2].SeatNumber" />

@section Modals {
    <div class="modal fade" id="seat-map-modal" tabindex="-1" aria-labelledby="seat-map-modal-label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-fullscreen-md-down">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="seat-map-modal-label">Select a Seat</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" class="form-control" id="ticket-idx-modal" />
                    <center>
                        <div id="seat-map">
                        </div>
                    </center>
                </div>
                <div class="modal-footer justify-content-between">
                    <span class="">Selected Seat &nbsp; - &nbsp; <span id="selected-seat-span"></span></span>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}
@section Styles {
    <link rel="stylesheet" href="~/css/seat-config.css" />
}
@section Scripts {
    @* <script src="~/js/seat-config.js"></script> *@
    <script>

        function openModal() {
            let idx = $(this).attr('ticket-index');
            $('#ticket-idx-modal').val(idx);

            let inputName = $.escapeSelector(`Tickets[${idx}].SeatNumber`);
            $('#selected-seat-span').text($('#' + inputName).val() || 'None');

            renderSeats();
            $('#seat-map-modal').modal('show');
        }
        $('button[data-bs-target="#seat-map-modal"]').off('click').on('click', openModal)

        // Fetch seat config
        var cfg;
        $.get('/admin/airplane-models/seat-config/1', config => cfg = config);

        // Get currently booked seats
        let bookingData = JSON.parse(sessionStorage.getItem('bookingData') || '{}');
        var bookedSeats = (bookingData.Tickets || []).map(t => t.SeatNumber);

        // Fetch occupied seats, then render
        function renderSeats() {
            // Fetch occupied seats
            $.get('test/flights/occupied/1', function (unavailableSeats) {
                const rows = cfg.seatRows;
                const cols = cfg.seatColumns;
                const windowSeats = cfg.windowSeats;
                const rightWindowSeats = cols - windowSeats;

                // Get selected idx
                let selectedIdx = $('#ticket-idx-modal').val();

                // Clear inputs whose value is now unavailable
                $('input[id$="SeatNumber"]').each(function () {
                    let seat = $(this).val();
                    if (unavailableSeats.includes(seat)) {
                        $(this).val('');
                        bookedSeats = bookedSeats.filter(s => s !== seat);
                    }
                });

                // Build seat map
                let $map = $('<div id="seat-map"></div>');
                for (let r = 0; r < rows; r++) {
                    let $row = $('<div class="seat-row"></div>');
                    let $center = $('<div class="seats-center"></div>');
                    let $left = $('<div class="seats-left"></div>');
                    let $right = $('<div class="seats-right"></div>');
                    for (let c = 0; c < cols; c++) {
                        let code = seatCode(c, r);
                        let $seat = $('<div class="seat"></div>');
                        $seat.attr('data-seat', code);

                        if (bookedSeats.includes(code)) {
                            $seat.addClass('occupied');
                            if (selectedIdx && code === getInputSeat(selectedIdx)) {
                                $seat.addClass('selected');
                            }
                        } else if (unavailableSeats.includes(code)) {
                            $seat.addClass('unavailable');
                        } else {
                            $seat.addClass('available');
                        }

                        if (cols === 1) {
                            $center.append($seat);
                        }
                        else {
                            if (c < windowSeats) $left.append($seat);
                            else if (c >= rightWindowSeats) $right.append($seat);
                            else $center.append($seat);
                        }
                        if (cols > 1) {
                            $row.append($left)
                                .append($center)
                                .append($right);
                        }
                        else $row.append($center);
                    }
                    $map.append($row);
                }
                $('#seat-map').replaceWith($map);

                // Attach click handlers after rendering
                $('#seat-map .seat.available, #seat-map .seat.selected').off('click')
                    .on('click', function () {
                        let $seat = $(this);
                        if ($seat.hasClass('selected')) {
                            // Unselect seat for this idx
                            $seat.removeClass('selected occupied').addClass('available');
                            setInputSeat(selectedIdx, '');
                            return true;
                        }
                        // Unselect previous seat for this idx
                        $('#seat-map .seat.selected').removeClass('selected occupied').addClass('available');

                        // Mark this seat as occupied and selected
                        $seat.removeClass('available').addClass('occupied selected');

                        // Update the input
                        let seatCodeVal = $seat.data('seat');
                        setInputSeat(selectedIdx, seatCodeVal);

                        // Optionally update bookingData in sessionStorage for demo
                        // let bookingData = JSON.parse(sessionStorage.getItem('bookingData') || '{"Tickets":[]}');
                        // let idxNum = parseInt(idx, 10);
                        // if (!Array.isArray(bookingData.Tickets)) bookingData.Tickets = [];
                        // while (bookingData.Tickets.length <= idxNum) bookingData.Tickets.push({});
                        // bookingData.Tickets[idxNum].SeatNumber = seatCodeVal;
                        // sessionStorage.setItem('bookingData', JSON.stringify(bookingData));
                    });
                // $('#seat-map .seat.selected').off('click')
                //     .on('click', function () {
                //         // Unselect seat for this idx
                //         $(this).removeClass('selected occupied').addClass('available');
                //         setInputSeat(selectedIdx, '');
                //     });
            });
        }

        // Helper: Convert seat index to code (e.g., col=2, row=4 => "C5")
        function seatCode(col, row) {
            return String.fromCharCode(65 + col) + (row + 1);
        }
        // Helper to get the seat code
        function getInputSeat(idx) {
            let inputName = $.escapeSelector(`Tickets[${idx}].SeatNumber`);
            return $('#' + inputName).val();
        }
        // Helper to set the seat code
        function setInputSeat(idx, value) {
            let inputName = $.escapeSelector(`Tickets[${idx}].SeatNumber`);
            $('#' + inputName).val(value);
            bookedSeats[idx] = value;
            $('#selected-seat-span').text(value || 'None');
        }
    </script>
}