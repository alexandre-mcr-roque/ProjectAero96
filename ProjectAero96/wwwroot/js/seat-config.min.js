function validateSeatConfig(n,t,i,r){if(n<1||t<1||i<1||r<1||i>1e3||n>1e3||t>12||r>4)return" ";if(n*t>i)return"Number of seats exceed the maximum amount of seats.";if(t==1){if(r!=1)return"This configuration of window seats is invalid."}else{let n=t-r*2;if(n<0)return`Number of window seats must be at most ${t/2|0}.`;if(n>4)return`Number of window seats must be at least ${(t-3)/2|0}.`}return""}function renderSeatMap(){let i=$("#WindowSeats"),r=parseInt($("#SeatRows").val())||0,t=parseInt($("#SeatColumns").val())||0,e=parseInt($("#MaxSeats").val())||0,n=parseInt(i.val())||0;if(t===1)n=1,i.val(n),i.prop("disabled",!0);else{let r=t-n*2;r<0&&(n=t/2|0);r>4&&(n=(t-3)/2|0);i.val(n);i.prop("disabled",!1)}let u=validateSeatConfig(r,t,e,n);$("#seat-config-error").text(u);let f=$("#seat-map");if(f.empty(),!(u.length>0)&&!(r<1)&&!(t<1))for(let i=0;i<r;i++){let i=$('<div class="seat-row"><\/div>');if(t===1){let n=$('<div class="seats-center"><\/div>');n.append('<div class="seat"><\/div>');i.append(n)}else{let r=$('<div class="seats-left"><\/div>');for(let t=0;t<n;t++)r.append('<div class="seat"><\/div>');i.append(r);let e=t-n*2,u=$('<div class="seats-center"><\/div>');for(let n=0;n<e;n++)u.append('<div class="seat"><\/div>');i.append(u);let f=$('<div class="seats-right"><\/div>');for(let t=0;t<n;t++)f.append('<div class="seat"><\/div>');i.append(f)}f.append(i)}}function updateSetDefaultSeatConfigButton(){let n=$("#MaxSeats"),r=n.closest("form"),t=r.data("validator")||r.data("unobtrusiveValidation"),i=!1;t?(t.element(n),i=t.invalid.MaxSeats===!0):i=n.attr("aria-invalid")==="true";$("#open-seat-config").prop("disabled",i||n.val()<="0")}$(function(){let n=$("#MaxSeats"),t=$("#SeatRows"),i=$("#SeatColumns"),r=$("#WindowSeats"),u=$("#AirplaneModelId");if(u.length)u.on("change",function(){let u=$(this).val();u=="0"?(n.val(0),t.val(1),i.val(1),r.val(1),renderSeatMap(),updateSetDefaultSeatConfigButton()):$.get(`/admin/airplane-models/seat-config/${u}`).done(function(u){n.val(u.maxSeats);t.val(u.seatRows);i.val(u.seatColumns);r.val(u.windowSeats)}).fail(function(){n.val(0);t.val(1);i.val(1);r.val(1)}).always(function(){renderSeatMap();updateSetDefaultSeatConfigButton()})});updateSetDefaultSeatConfigButton();n.on("input change",updateSetDefaultSeatConfigButton);n.on("blur",function(){setTimeout(updateSetDefaultSeatConfigButton,10)});$("#SeatRows, #SeatColumns, #MaxSeats, #WindowSeats").on("input",renderSeatMap);renderSeatMap();$("form").on("submit",function(n){let t=parseInt($("#SeatRows").val())||0,i=parseInt($("#SeatColumns").val())||0,r=parseInt($("#MaxSeats").val())||0,u=parseInt($("#WindowSeats").val())||0,f=validateSeatConfig(t,i,r,u);if(f.length>0)return n.preventDefault(),!1})});